@testset "ACSF Descriptor" begin


@info("Testing ACSF Descriptor for DC 4x4x4 Si with cutoff=6.5 and Behler2011 parameters.")
using ACSF, JuLIP, Test

at = bulk(:Si, cubic=true) * (4,4,4)
desc = acsf(at)
#round.(desc[1], digit=7) == acsfpy
acsf_ref = [4.81846917e-01, 1.97057087e-01, 1.37542748e+00, 3.11983182e-02,
            1.20956871e+00, 1.34772732e-01, 9.81110850e-01, 2.04425450e-02,
            8.66780663e-01, 7.25954501e-02, 5.65107133e-01, 1.01872340e-02,
            5.02698917e-01, 3.25298780e-02, 2.73442761e-01, 4.10369363e-03,
            2.45016577e-01, 1.26985684e-04, 1.98000488e-01, 5.98314965e-12,
            6.05667564e-02, 1.13065805e-02, 1.02345157e-01, 1.25834949e-03,
            9.22969261e-02, 2.90771944e-05, 7.53246840e-02, 1.22274743e-12,
            2.33392182e-02, 1.60341144e-03, 1.54847682e-02, 1.56039987e-04,
            1.40373967e-02, 2.06972730e-06, 1.15466968e-02, 5.11870426e-14,
            3.62036735e-03, 6.09627874e-05, 6.01989203e-04, 5.62744599e-06,
            5.46653861e-04, 5.02743555e-08, 4.50816508e-04, 1.41979691e-04,
            0.00000000e+00, 0.00000000e+00, 0.00000000e+00, 0.00000000e+00,
            0.00000000e+00, 0.00000000e+00, 0.00000000e+00]
acsf_now = vcat(desc[1,:]...)
println("ACSF.jl returns:",acsf_now)
println("Reference:",acsf_ref)
println(@test acsf_now  â‰ˆ  acsf_ref)

end
