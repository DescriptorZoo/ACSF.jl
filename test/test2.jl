@testset "ACSF Descriptor with Tanh Cutoff function" begin

@info("Testing ACSF Descriptor for dc Si with Tanh cutoff function.")
using ACSF, JuLIP, Test

at = bulk(:Si, cubic=true)
desc = acsf(at, cutfunc="Tanh")
#round.(desc[1], digit=7) == acsfpy

acsf_ref = [1.7007052856995, 1.1673457218371, 
            0.8056685651973, 0.4959433476485,
            0.2531071275919, 0.1033559431748, 
            0.0138370429717, 0.0002664727401, 
            0.0338991567076, 0.0890719236666, 
            0.0156854176408, 0.0708581845999, 
            0.0240759835270, 0.0630065104164, 
            0.0113341745307, 0.0502647014201, 
            0.0136132348530, 0.0353997671701, 
            0.0065836992180, 0.0283702315352, 
            0.0063508468825, 0.0163914850457, 
            0.0031689489094, 0.0132095870726, 
            0.0012299277014, 0.0098887900622, 
            0.0000106088e-5, 0.0029245491351, 
            0.0022580079204, 0.0057823240740, 
            0.0011636531625, 0.0046879693161, 
            0.0004696015908, 0.0035649802825, 
            3.7013292128e-6, 0.0010783907380, 
            0.0003206000003, 0.0008143046788, 
            0.0001708095102, 0.0006645141887, 
            7.1667175764e-5, 0.0005136395522, 
            5.4718112317e-7, 0.0001587403432, 
            1.2136187945e-5, 3.0709048356e-5, 
            6.5665761557e-6, 2.5139436567e-5, 
            2.8048095043e-6, 1.9579283755e-5, 
            6.1054165366e-6]
acsf_now = vcat(desc[1,:]...)
println("ACSF.jl returns:",acsf_now)
println("Reference:",acsf_ref)
println(@test acsf_now  â‰ˆ  acsf_ref)
end
